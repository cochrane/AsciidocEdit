== Monomial Ideals, Groebner Bases, and the Division Algorithm
:stem: latexmath

<<MOLT, Monomial orders and leading terms>> +
<<MIAGB,Monomial ideal and Groebner bases>> +
<<ACC, The Ascending Chain Condition>> +
<<DA,Division algorithm>> +

=== Monomial orders and leading terms[[MOLT]]

.Exponents
image::189[width=200, float=right]

A [term]#monomial# in variables +\(x_1 \commadots x_n\)+ is an
expression
\[
   x^\alpha = x_1^{\alpha_1}\cdots x_n^{\alpha_n}
\]
where the exponent +\(\alpha\)+ has non-negative integers as
entries.
Exponents are elements in the semigroup +\(E = (\ZZ^{\ge 0})^n\)+,
which we can visualize as in the diagram on the right.  The degree
of an exponent, written +\(|\alpha|\)+, is the sum +\(\alpha_1 +
\cdots
\alpha_n\)+. Exponents of degree +\(k\)+ lie on a hyperplane which
cuts
+\(E\)+ in points on the axes at distance +\(k\)+ from the origin.

A polynomial with coefficients in a field +\(k\)+ is a linear
combination with coefficients in +\(k\)+ of monomials in
the given variables:
\[
  f = \sum c_\alpha x^\alpha
\]
The degree of +\(f\)+ is the maximum degree of its monomials.

A [term]#total order# on a set is a transitive relation +\(<\)+
such
that trichotomy holds: given arbitrary elements +\(\alpha\)+ and
+\(\beta\)+ of the set, exactly one of +\(\alpha < \beta\)+,
+\(\alpha =
\beta\)+, +\(\alpha > \beta\)+ holds.  The set of exponents
+\(E\)+ has many
total orders.  We will be interested in those which are compatible
with the addition law: if +\(\alpha < \beta\)+, then +\(\alpha +
\gamma
< \beta + \gamma \)+ for all +\(\gamma\)+.  Compatible orders on
exponents correspond to total orders on monomials such that if
+\(M
< N\)+, then +\(PM = PN\)+ for all monomials +\(P\)+.  We call
these
[term]#monomial orders#.

There are many monomial orders. For the moment we define two: the
[term]#lexicographical order#, _lex_ and the [term]#degree
lexicographical order#, _deglex_.  For _lex_, say that  +\(\alpha
<
\beta\)+ if the first nonzero entry of +\(\beta - \alpha\)+ is
positive.
Thus +\(xy^{10} <_{lex} x^2y\)+ and +\(x^2y <_{lex} x^2y^{10}\)+.
For
_deglex_, say that +\(\alpha < \beta\)+ if +\(|\alpha| <
|\beta|\)+.  If
+\(|\alpha| = |\beta|\)+, then +\(\alpha <_{deglex} \beta\)+ if
the
leftmost nonzero entry of
+\(\beta - \alpha\)+ is positive.  Thus +\(x^4y^{4} <_{deglex}
x^3y^{6}\)+, and +\(xy^8 <_{deglex} x^3y^{6}\)+.  The _deglex_
order is
a
[term]#graded order# in the sense that if +\(|\alpha|  >
|\beta|\)+,
then +\(x^\alpha > x^\beta\)+ -- that is, the monomial with the
largest total order always wins.

When the context makes the ordering clear, we drop the subscript.
For more information, consult
http://www.sagemath.org/doc/reference/polynomial_rings/sage/rings/polynomial/term_order.html[sagemath.org]

For some problems the choice of a monomial order is irrelevant. 
For others, it makes a difference.  The _degrevlex_ order, for
example, is useful in defining and computing the dimension of a
variety, whereas _lex_ is not.

*Exercise {counter:exercise}.* Show the lex and degrevlex are
indeed monomial orders.


One can work with monomial orders in Sage:

.Code
[source,python]
--
sage: R.<x,y> = PolynomialRing(QQ, order='lex')
sage: x > y
True
sage: x^3 > x^2*y^2
True
sage: x^2*y^2 > x^2*y
True
--

Let +\(f\)+ be a polynomial.  It is a linear combination of
monomials
+\(M_i\)+. Let +\(L\)+ be the greatest of these monomials in the
given
monomial order.  Then the [term]#leading monomia# of +\(f\)+ is
\[
  LM(f) = L.
\]
The corresponding term of +\(f\)+, +\(cL\)+ for some scalar
+\(c\)+, is called
the  [term]#leading term#, and is written +\(LT(f)\)+.

*Example {counter:example}.* Consider the polynomials +\(f_1  =
x^3
+ 2x^2y^2 + 3x^2y\)+ and
+\(f_2 =  4x^2+ 5x^2y^2 + 6x^2y\)+ relative to the _lex_ order.
Then
+\(LT(f_1) = x^3\)+ and +\(LT(f_2) = 5x^2y^2\)+.

.Code
[source,python]
--
sage: R.<x,y> = PolynomialRing(QQ, order='lex')
sage: f1 = x^3 + 2*x^2*y^2 + 3*x^2*y
sage: f2 = 4*x^3 + 5*x^2*y^2 + 6*x^2*y
sage: f1.lt(), f2.lt()
(x^3, 5*x^2*y^2)
--

If we re-run this example in the _deglex_ order, we get
different results:

.Code
[source,python]
--
sage: R.<x,y> = PolynomialRing(QQ, order='deglex')
sage: f1.lt(), f2.lt()
(x^3, 5*x^2*y^2)
sage: f1 = x^3 + 2*x^2*y^2 + 3*x^2*y
sage: f2 = 4*x^2+ 5*x^2*y^2 + 6*x^2*y
sage: f1.lt(), f2.lt()
(2*x^2*y^2, 5*x^2*y^2)
--


=== Monomial Ideals and Groebner Bases[[MIAGB]]

image::188[width=200,role=left]

A [term]#monomial ideal# is an ideal generated by monomials. For
an example, take the ideal +\(I = (x^3, x^2y^2, y^4)\)+ in
+\(k[x,y]\)+.
It is a monomial ideal generated by three elements which can be
visualized as follows.  Let +\(E(I)\)+ be the set of exponents of
monomials in the ideal.  In the case
at hand, it is a figure with three vertices, as in the figure on
the left. The vertices are the points +\((3,0)\)+, +\((2,2)\)+,
and
+\((0,4)\)+ corresponding to the monomials +\(x^3\)+,
+\(x^2y^2\)+, and +\(y^4\)+.


For the general case, let +\(E = \ZZ_{\ge 0}^n\)+ be the lattice
of
possible exponents.  The ideal generated by a monomial +\(M =
x^\alpha\)+ corresponds to the translate of the quadrant +\(E\)+
by the
exponent. Thus
\[
   E(M) = \alpha + E
\] 
in general, and
latexmath:[ E(x^2y^2) = (2,2) + E]
in the case at hand.
Let  +\(\mathcal{E}\)+ be the set of extreme points of +\(E(I)\)+.
In the
figure above,
\[
   \mathcal{E} = \set{(3,0), (2,2), (0,4)}.
\]
It is clear that +\(E(I)\)+ is determined this set:
\[
   E(I) = \bigcup_{M \in \mathcal{E}} E(M).
\]
Moreover, _the ideal +\(I\)+ is generated by the monomials
corresponding to the extreme points of +\(E(I)\)+_. Since these
points
lie in a bounded region, they are finite in number.  We have just
proved a special case of the Hilbert basis theorem:

*Theorem {counter:theorem}. (Dickson's lemma)*  _Monomial ideals
are finitely generated._


Now consider an arbitrary ideal +\(I\)+, and let +\(LT(I)\)+ be
the ideal
generated by the leading forms of elements of +\(I\)+.  It is a
monomial ideal which depends very much on the total order used.

*Example {counter:example}.* Let +\(f = y^2 - x^3 -1\)+, so that
+\(V(f)\)+ is an elliptic curve.  The leading term of +\(f\)+ in
the
_degvlex_ order is +\(-x^3\)+ regardless of whether +\(x < y\)+ or
+\(x >
y\)+.  In the _lex_ order, the leading term is +\(-x^3\)+ or
+\(y^2\)+,
depending on whether +\(x > y\)+ or +\(y > x\)+.

 

*Example {counter:example}.*  Let +\(I = (x^3 + y^3, x^2y,
y^4)\)+.
This ideal is not a monomial ideal.  The associated monomial ideal
in the _lex_ order with +\(x > y\)+ is +\(M(I) =  (x^3, x^2y,
y^4)\)+.

Despite the dependence of +\(LT(I)\)+ on a total order, any one of
these orders is sufficient to establish the following fundamental
result.

*Theorem {counter:proposition}. (Groebner Basis Theorem)* _Let
+\(\set{\vars{M}{r}}\)+ be a set of generators of +\(LT(I)\)+, and
let
+\(g_i \in I\)+ be such that +\(LT(g_i) = M_i\)+. Then
+\(\set{\vars{g}{r}}\)+
is a set of generators of +\(I\)+._

The theorem has led us to an important definition: a
[term]#Groebner basis# is a basis +\(\set{g_i}\)+ for an ideal
+\(I\)+
such that the set of leading forms +\(\set{LT(g_i)}\)+ is a basis
for
+\(LT(I)\)+.  The above theorem asserts their existence for all
ideals
+\(I \subset k[\vars{x}{n}]\)+ and as a consequence implies the
Hilbert Basis Theorem.


*Proof.*   Let +\(\set{\vars{M}{r}}\)+ and +\(\set{\vars{g}{r}}\)+
be as
in the theorem.
Consider the sets  
\[
   S = \Set{f \in I - I(\vars{g}{r})}
\]
and
\[
   LM(S) = \Sett{LM(f)}{f \in S}
\]
We aim to prove that +\(S\)+ is empty.  If it is not, there is a
least
monomial +\(M'\)+ in +\(LM(S)\)+ and an element +\(f \in S\)+ such
that
+\(LT(f) = M'\)+.  There is a monomial +\(M''\)+ and a monomial
+\(M_j \in
\set{\vars{M}{r}}\)+ such that +\(M' = M''M_j\)+.  Consider the
polynomial
\[
   f' = f - M''f_j.
\]
By construction, +\(LM(f') < LM(f)\)+.  Therefore +\(LM(f') \in
I\)+.  But
then +\(f \in I\)+, a contradiction.

*Example {counter:example}.*  The ideal +\(I = (x^3 + y^3, x^2y,
y^4)\)+ is given by a Groebner basis.

The Groebner Basis Theorem is a version of the Hilbert Basis
Theorem.  The bases whose existence it asserts are called
[term]#Groebner bases#.  They play a central role in the
computational theory of commutative algebra.  The existence proof
we have given is non-constructive.  For computational purposes, we
need a constructive proof, one which yields an algorithm for
producing Groebner bases.  We shall do this later.

*Definition {counter:definition}.*  _A Groebner basis for an ideal
+\(I\)+ is a set +\(G = \set{\vars{g}{r}}\)+ such that for all
+\(f \in I\)+,
+\(LT(f)\)+ is divisible by some +\(LT(g_i)\)+._


=== The Ascending Chain Condition[[ACC]]

We can now establish one of the fundamental results of commutative
algebra:

*Theorem {counter:theorem}. (Ascending Chain Condition)*  _Let
+\(I_1 \subset I_2 \subset \cdots \)+
be an infinite chain of ideals.  There is an integer +\(N\)+ such
that
+\(I_j = I_N\)+ for all +\(j > N\)+._

*Proof.* Let +\(I = \bigcup_j I_j\)+.  One easily shows that this
is
an ideal. By the Hilbert Basis Theorem, it has a finite set of
generators +\(\set{g_1 \commadots g_r}\)+. Consequently there is
an
integer +\(N\)+ such that +\(I_N\)+ contains this set.  Therefore
+\(I_N =
I\)+.  Q.E.D.

A ring satisfying the ascending chain condition (ACC) is said to
be [term]#Noetherian#, in honor of the mathematician Emmy Noether.
An immediate consequence of the ACC for +\(k[\vars{x}{n}]\)+ is
the
following.

*Theorem {counter:theorem}.* _A variety +\(V\)+ can be written as
+\(V =
V_1 \cup \cdots \cup V_r\)+, where the +\(V_j\)+ are irreducible._


*Proof.* _to insert_ Q.E.D.

We say that the decomposition of a variety into irreducibles is
[term]#minimal# if +\(V_i \not\subset V_j\)+ for +\(i \ne j\)+. 
For
example, the decomposition of the variety defined by the equation
+\(xy = 0\)+ into the union of the coordinate axes is minimal. 
Now
let +\(V_3\)+ be the origin in the +\(xy\)+ plane.  Then we also
have
\[
   V = V_1 \cup V_2 \cup V_3
\]
as a union of irreducibles. But it is not a minimal decomposition
-- the imbedded component +\(V_3\)+ is
redundant.

*Theorem {counter:theorem}.*  _Let +\(V\)+ be a variety.  Any two
minimal decompositions of +\(V\)+ into irreducibles differ only by
the
order of the terms._


From the preceding section, we know that the ideal of an
irreducible variety is prime. Moreover, we know that via the
algebra-geometry dictionary, the union of varieties corresponds to
the intersection of ideals.  Thus we have the following result.

*Theorem {counter:theorem}.* _Let +\(V\)+ be a variety over an
algebraically closed field.  Then_
\[
  I(V) = \bigcap_j P_j
\]
_is an intersection of prime ideals +\(P_j\)+, where +\(P_j =
I(V_j)\)+
and the +\(V_j\)+ are the terms in the decomposition of +\(V\)+
into
irreducibles._

Recall that the ideal of a variety is a radical ideal.  Using this
notion, we can state the preceding result purely in
ideal-theoretic language.

*Theorem {counter:theorem}.* _Let +\(I\)+ be a radical ideal in
+\(k[\vars{x}{n}]\)+, where the field +\(k\)+ is algebraically
closed.
Then_
\[
  I = \bigcap_j P_j
\]
_is an intersection of prime ideals +\(P_j\)+.  If we assume that
+\(P_i
\not\subset P_j\)+ for +\(i \ne j\)+, then this decomposition of
+\(I\)+ is
unique up to order._

The decomposition of a radical ideal into primes is a special case
of the more general decomposition of an arbitrary ideal into
primary ideals.  In the previous section, we saw that this
decomposition can be found by applying Sage's
+primary_decomposition_complete()+ method to an ideal.
 
=== The Division Algorithm[[DA]]

Consider the polynomial ring +\(k[x]\)+.  Every ideal +\(I\)+
in this ring is [term]#principal#, meaning that it is generated by
a single element.  The proof goes as follows.  Let +\(g \in I\)+
be an
element of minimal degree.  Let +\(f \in I\)+ be arbitrary.  Apply
the
division algorithm to to +\(f\)+ and +\(g\)+ to write
\[
   f = qg + r,
\]
where +\(q\)+ is the quotient, +\(r\)+ is the remainder, and
+\(\deg r < \deg g\)+.  Since both +\(f\)+ and +\(g\)+ are in the
ideal, so is
+\(r\)+.  But since +\(f\)+ has minimal degree among nonzero
elements of
+\(I\)+, +\(r  = 0\)+.  Therefore +\(f = qg\)+, and the proof is
complete.

The proof that an ideal in +\(k[x]\)+ is principal relies on (i)
the
existence of an total order on monomials, given here by the
degree, and (ii) the division algorithm.  For
+\(k[\vars{x}{n}]\)+, +\(n
> 1\)+, we have the notion of a total order on monomials.  There
is
also a division algorithm -- both the actual algorithm and the
theorem. The theorem is as follows:

*Proposition {counter:proposition}. (Division Algorithm)* 
_Suppose given a monomial order, a polynomial +\(f\)+ (the
dividend)
and a set of polynomials +\(\set{g_i}\)+ (the divisors).  Then
there
are polynomials +\(q_i\)+ (the quotients) and a polynomial +\(r\)+
(the
remainder) such that
+\(f = q_1g_1 + \cdots + q_rg_k + r\)+, where either +\(r = 0\)+
or +\(r\)+ is
a linear combination of monomials not divisible by any of the
monomials +\(LM(f_i)\)+._

The division algorithm for +\(k[\vars{x}{r}]\)+ is weaker than its
one-variable version.   However, for a Groebner basis, it is much
stronger:

*Proposition {counter:proposition}. (Strong Division Algorithm)* 
_Consider division of +\(f\)+ by +\(G = \set{\vars{g}{s}}\)+ where
+\(G\)+ is
a Groebner basis for an ideal +\(I\)+.  Then the remainder is
independent of the order of the basis elements, and +\(r  = 0\)+
if
and only if +\(f \in I\)+._

Note that the division algorithm for a Groebner basis gives a test
for for determining whether an element +\(f \in k[\vars{x}{n}]\)+
is
element of an ideal +\(I\)+.

Let us now describe the multivariate division algorithm. To this
end, we suppose that we are in the situation of the proposition. 
That is, we are given a polynomial +\(f\)+, the dividend, and
divisors
+\(g_1 \commadots g_k\)+.

(1) Set up a  +\(p = f\)+ partial dividend and partial quotients
+\(a_i
= 0\)+, where +\(i = 1 \commadots r\)+.
Set +\(r = 0\)+ and set +\(i = 1\)+.

(2) If +\(LT(f_i)\)+ divides +\(LT(p)\)+, replace +\(p\)+ by 
\[
    p - \frac{LT(p)}{LT(f_i)}f_i
\]
and replace +\(a_i\)+ by
\[
   a_i + \frac{LT(p)}{LT(f_i)}
\]
Record the fact that "division occurred", and call this a step of
type A.
If +\(LT(f_i)\)+ does not divide +\(LT(p)\)+, replace +\(i\)+ by
+\(i + 1\)+.  If
+\(i > k\)+, go to (2) if "division occurred" for some +\(i\)+. 
Otherwise, replace +\(r\)+ by
\[
  r + LT(p)
\]
and replace +\(p\)+ by 
\[
  p - LT(p).
\]
Call this a step of type B.  At each stage of the process, we have
\[
   f = p + a_1f_1 + \cdots + a_kf_k + r.
\]
This concludes the description of the algorithm.


Notice that after steps of type A or type B, we have
\[
   LT(\text{new } p) < LT(\text{old } p).
\] 
Thus the process described above will terminate in a finite number
of steps.  When it does terminate, +\(p = 0\)+.  For otherwise we
could reduce +\(LT(p)\)+ still further by a step of type A or type
B.
When the process terminates, we have
\[
   f = a_1f_1 + \cdots + a_kf_k + r,
\]
as desired.  In the one-variable division algorithm, only steps of
type A were used.  Without steps of type B, we would be unable to
reduce the partial +\(p\)+ to zero.


==== Example of Long Division[[eld]]

\[
    x^5 + y^5 = a_1g_1 + a_2g_2 + r 
    = (x^2)(x^3 + y^2) + (-x^2 + y^3 -y)(y^2 + 1) + (x^2 + y)
\]

----
   a1: x^2            a2: -x^2+y^3-y
   g1: x^3 + y^2     |  x^5 + y^5
   g2: y^2 + 1       |  x^5 + x^2y^2
   ----------------	-------------
   r:   x^2	        -x^2y^2 + y^5
 			-x^2y^2 - x^2
			-------------
			x^2 + y^5
			-------------
			y^5
			y^5 + y^3
		        -------------
		        -y^3
			-y^3 - y
		        ------------
			 y
----

=== Algorithms[[algo]]

.Algorithm
----
   Input: g1, ..., gs, g;   Output: a1, ..., as, r
   a1, ..., as = 0, ..., 0
   r , p = 0, f
   WHILE p <> 0:
      i = 1
      WHILE I <= s AND divisionoccured = false:
         IF LT(gi) divides LT(p):
            ai = ai + LT(p)/LT(gi)
            p = p - (LT(p)/LT(gi))gi
            divisionoccured = true
         ELSE:
            i = i + 1
      IF divisionoccured = false:
         r = r + LT(p)
         p = p - LT(p)
----

Below is the algorithm translated into <<SCFDA,Sage code>>.  You
can copy it, paste it into a file, and then run the example above
like this:

[source,python]
--
sage: R.<x,y> = PolynomialRing(QQ,order='lex')
sage: f = x^5 + y^5
sage: g1 = x^3  +y^2
sage: g2 = y^2 + 1
sage: runfile div.sage
sage: div(f, [g1, g2])
([x^2, -x^2 + y^3 - y], x^2 + y)
--

The first component of the result is a list.  Its two components
give the quotients +\(a_1\)+, +\(a_2\)+.  The second component of
the
result is the remainder.

.Exercise
--
Let +\(f = xy^2 + xy + y^3 + 1\)+ and let 
\[
g_1 = y^2 + 1, \\
g_2 = xy + 1
\]
. Compute +\(div(f,[g1,g2])\)+. Then compute +\(div(f,[g2,g1])\)+.
. Find a Groebner basis for the ideal generated by +\(g_1\)+ and
+\(g_2\)+.  Run the division algorithm for +\(f\)+ with this set
of
divisors, and for this set of divisors reversed.  What do you
find?
--



.Sage Code[[SCFDVA]]
[source,python]
----
# file: div.sage
def div(f,g):
  R = f.parent()
  n = len(g)
  p, r, a = f, 0,  [0 for x in range(0,n)]
  while p != 0:
    i, divisionoccured = 0, False
    while i < n and divisionoccured == False:
      glt = g[i].lt();
      plt = p.lt();
      if R.monomial_divides( glt, plt ):
        q = R(plt/glt)
        a[i] = a[i] + q
        p = p - q*g[i]
        divisionoccured = True
      else:
        i = i + 1
    if divisionoccured == False:
      r = r + plt
      p = p - plt
  return a, r
----




--
.  \(f\) can be in ideal generated by \(G = g_1, \ldots,
g_n\), but it is possible that \(div(f,G) \ne 0\).

. The remainder can depend on the order of the divisors.

=== Code examples[[ce]]
.Code example
----
sage: R.<x,y> = PolynomialRing(QQ) 
sage: G = [x^2 + 1, x*y^2 + y]
sage: f = x*y - y^2
sage: f in ideal(G)
True
sage: div(f,G)
([0, 0], x*y - y^2)
----

--

.Code example
----
sage: R.<x,y> = PolynomialRing(QQ, order = 'lex')
sage: f = x*y - y^2
sage: I = ideal( x^2 + 1, x*y^2 + y )
sage: G = I.groebner_basis(); G
[y^3 + y, x*y - y^2, x^2 + 1]
sage: div(f,G)
([0, 1, 0], 0)
----


Let +\(f = x^2 + 1\)+, +\(g = xy^2 + y\)+.   Let's try to cook up
an
expression +\(S = Af + Bg\)+
in which the terms coming from +\(LT(f) = x^2\)+ and +\(LT(g) =
xy^2\)+
cancel:
\[
   S = y^2f - xg  = (x^2y^2+ y^2) - (x^2y^2 + xy)  =  -xy + y^2
\]

.Note
--
. +\(LT(S) = -xy\)+ is in +\(\left<LT(I)\right>\)+.

. +\(LT(S) \ne x^2, xy^2\)+
 
. We have _discovered_ a new element of the ideal of leading
forms: +\(x^2  > xy^2  > xy\)+.
--

In general we must take +\(S(f,g) \mathop{mod} B\)+.


*Definition*  Let +\(LCM = LCM(LM(f), LM(g))\)+
\[
   S(f,g) = \frac{ LCM }{ LT(f) } f - \frac{ LCM }{ LT(g) } g
\]


=== Code for Groebner Basis[CGB]

[source, python]
--
def gb(F):
   G = [p for p in F]
   nn, n = -1, -2
   while nn != n:
      n = len(G)
      for i in range(0,n):
         for j in range(i+1,n):
            spoly = S(G[i], G[j])
            spoly = div(spoly,G)[1]
            if spoly != 0:
               G += [spoly]
      nn = len(G)
   return G
--









=== Exercises



. Show that a variety  +\(V\)+  is irreducible if and only if its
ideal
 +\(I(V)\)+  is prime.  (See [IVA], p. 195-196 for a solution).

. Show that any variety given parametrically as the image of a
polynomial map  +\(k^m \mapright{f} k^n\)+  is irreducible.

. Let  +\(V \subset k^3\)+  be the variety given parametrically by
+\(f(t)
= (t^3, t^4, t^5)\)+ . Describe the ideal of  +\(V\)+ .  Is it
prime?  Is
the variety a complete intersection?

. The variety of the previous problem is singular at the origin
and is smooth elsewhere.  Find the multiplicity of the singularity